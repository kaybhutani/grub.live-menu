{"version":3,"sources":["assets/images/grub.live-logo.svg","assets/images/three_dots_loading.svg","assets/images/grub.live-logo-yellow.svg","components/Home.js","components/Navigation.js","components/MenuItem.js","components/PreviewRestaurantMenu.js","components/PreviewMenu.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Home","className","style","textAlign","width","margin","facingMode","onError","error","console","log","onScan","data","includes","window","location","href","alert","scanHandler","Navigation","src","logo","alt","MenuItem","itemName","itemDescription","itemPrice","theme","customStyling","WebkitTextStroke","color","PreviewRestaurantMenu","props","useState","restaurantDetails","setRestaruarntDetails","searchQuery","setSearchQuery","customizedMenu","themes","Light","setTheme","useEffect","menu","themeName","tempRestaurantDetails","JSON","parse","stringify","categories","forEach","category","title","toLowerCase","trim","push","tempItems","i","items","length","fontSize","restaurantName","bio","type","name","placeholder","onKeyUp","e","target","value","map","element","key","borderColor","opacity","item","itemKey","PreviewMenu","setRestaurantDetails","dataFetched","setDataFetched","menuId","useParams","fetch","apiBaseUrl","then","response","json","success","marginBottom","onClick","loadingIcon","Footer","yellowLogo","App","exact","path","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6825676.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/grub.live-logo.3b6b4ff3.svg\";","module.exports = __webpack_public_path__ + \"static/media/three_dots_loading.4d1c15f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/grub.live-logo-yellow.8cd86dd6.svg\";","import React from 'react'\nimport QrReader from 'react-qr-scanner'\n\nconst Home = () => {\n  const scanHandler = (data) => {\n    \n    if(data!=null) {\n      if(data.includes('glqr.me'))\n        window.location.href = data\n      else\n        alert(`That doesn't look a QR code we generated!`)\n    }\n  }\n  return (\n    <div className='container' style={{textAlign: \"center\"}}>\n      {/* <h1>Scan QR Code</h1> */}\n      <br></br>\n      <QrReader\n          style={{width: '80%', margin: 'auto'}}\n          \n          facingMode = 'rear'\n          onError = {(error) => console.log(error)}\n          onScan = {(data) => scanHandler(data)}\n          />\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport logo from '../assets/images/grub.live-logo.svg'\n\nconst Navigation = () => {\n  \n  return (\n    <div>\n      <nav>      \n        <div className='nav-item'>\n          <a href='https://grub.live'><img className='logo' src={logo} alt='Grub.live logo'  /></a>\n        </div>\n      \n      </nav>\n    </div>\n  )\n}\n\nexport default Navigation\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nconst MenuItem = ({ itemName, itemDescription, itemPrice, customStyling , theme}) => {\n  return (\n    <div className=\"menu-item\">\n      <p className=\"item-name\" \n      style = {\n        {\n          WebkitTextStroke: `0.03em ${theme.color}`\n        }\n      }>{itemName}</p>\n      <p className=\"item-price\" \n        style = {\n          {\n            WebkitTextStroke: `0.03em ${theme.color}`\n          }\n        }\n      >{itemPrice}</p>\n      {itemDescription ? (\n        <i className=\"item-description\">{itemDescription}</i>\n      ) : null}\n    </div>\n  );\n};\n\nMenuItem.propTypes = {\n  itemName: propTypes.string.isRequired,\n  itemDescription: propTypes.string.isRequired,\n  itemPrice: propTypes.string.isRequired,\n  customStyling: propTypes.string,\n};\n\nexport default MenuItem;\n","import React, { useEffect, useState } from \"react\";\nimport themes from \"../themes.json\";\nimport MenuItem from \"./MenuItem\";\n\nconst PreviewRestaurantMenu = (props) => {\n  const [restaurantDetails, setRestaruarntDetails] = useState(\n    props.restaurantDetails\n  );\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const customizedMenu = props.customizedMenu;\n  const [theme, setTheme] = useState(themes.Light);\n\n  useEffect(() => {\n    if (customizedMenu) {\n      if (restaurantDetails.menu.theme) {\n        if (themes[restaurantDetails.menu.theme.themeName])\n          setTheme(themes[restaurantDetails.menu.theme.themeName]);\n        else {\n          console.log(\"No theme name found. Reading theme info\");\n          setTheme(restaurantDetails.menu.theme);\n        }\n      }\n    }\n  }, [customizedMenu, restaurantDetails]);\n\n  useEffect(() => {\n    if (searchQuery === \"\") setRestaruarntDetails(props.restaurantDetails);\n    else {\n      // changing state obj to json\n      const tempRestaurantDetails = JSON.parse(\n        JSON.stringify(props.restaurantDetails)\n      );\n\n      const categories = [];\n\n      tempRestaurantDetails.menu.categories.forEach((category) => {\n        if (\n          category.title\n            .toLowerCase()\n            .includes(searchQuery.toLowerCase().trim())\n        ) {\n          categories.push(category);\n        } else {\n          const tempItems = [];\n          for (let i = 0; i < category.items.length; i++) {\n            if (\n              category.items[i].itemName\n                .toLowerCase()\n                .includes(searchQuery.toLowerCase().trim())\n            )\n              tempItems.push(category.items[i]);\n          }\n          category.items = tempItems;\n          if (tempItems.length > 0) {\n            categories.push(category);\n          }\n        }\n      });\n      tempRestaurantDetails.menu.categories = categories;\n      setRestaruarntDetails(tempRestaurantDetails);\n    }\n  }, [searchQuery, props.restaurantDetails]);\n\n  // const searchDish = (e) => {\n\n  // }\n\n  return (\n    <div\n      className=\"shadow-box\"\n      style={\n        customizedMenu\n          ? {\n              ...theme,\n\n              // backgroundColor: theme.backgroundColor\n            }\n          : {}\n      }\n    >\n      <div style={{ textAlign: \"center\" }}>\n      {restaurantDetails.logo ? (\n            <img\n              src={restaurantDetails.logo}\n              alt=\"\"\n              className=\"restaurant-logo\"\n            ></img>\n          ) : (\n            <i\n              className=\"eos-icons\"\n              style={{ color: \"red\", fontSize: \"1em\", margin: \"8px\" }}\n            >\n              local_dining\n            </i>\n          )}\n        <h1>\n          {restaurantDetails.restaurantName}\n        </h1>\n        {customizedMenu ? <h4>{restaurantDetails.bio}</h4> : <></>}\n      </div>\n      <br></br>\n\n      <div style={{ textAlign: \"center\" }}>\n        <input\n          type=\"text\"\n          name=\"search-restaurant\"\n          className=\"form-input\"\n          placeholder=\"Search Menu\"\n          onKeyUp={(e) => setSearchQuery(e.target.value)}\n        ></input>\n      </div>\n\n      <br></br>\n      <div>\n        {restaurantDetails.menu.categories.map((element, key) => {\n          return element.title !== \"\" ? (\n            <div key={key}>\n              <br></br>\n              <h2>{element.title}</h2>\n              <hr style={customizedMenu ? { borderColor: theme.color, opacity: '0.8' } : {}} />\n              <br></br>\n              {element.items.length > 0 ? (\n                <div>\n                  {restaurantDetails.menu.categories[key].items.map(\n                    (item, itemKey) => {\n                      return <MenuItem {...item} theme={theme} key={itemKey} />;\n                    }\n                  )}\n                </div>\n              ) : null}\n            </div>\n          ) : (\n            <div key={key}></div>\n          );\n        })}\n      </div>\n      <br></br>\n      <br></br>\n      <br></br>\n      <p style={{ textAlign: \"center\", margin: \"50px 0px 0px 0px\" }}>\n        Menu created with{\" \"}\n        <a style={{ color: \"inherit\" }} href=\"www.grub.live\">\n          www.grub.live\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default PreviewRestaurantMenu;\n","import React, { useState } from 'react'\nimport PreviewRestaurantMenu from './PreviewRestaurantMenu'\nimport {apiBaseUrl} from '../config.json'\n\nimport {useParams} from 'react-router-dom'\nimport loadingIcon from '../assets/images/three_dots_loading.svg'\n\n\nconst PreviewMenu = (props) => {\n  const [restaurantDetails, setRestaurantDetails] = useState(null)\n  const [dataFetched, setDataFetched] = useState(false)\n  let { menuId } = useParams();\n  if(!dataFetched) {\n    fetch(`${apiBaseUrl}/view?q=${menuId}`)\n        .then(response => response.json())\n        .then(data => {\n          setDataFetched(true)\n          console.log(data)\n          if(data.success)\n            {\n              setRestaurantDetails(data.data)\n            }\n        });\n  }\n  \n\n  return (\n    <div>\n      {dataFetched ? (\n      <div>\n        {restaurantDetails!=null\n        ?\n          (<div className='preview-menu'>\n            <PreviewRestaurantMenu restaurantDetails={restaurantDetails}  customizedMenu = {restaurantDetails.customizedMenu}/>\n          </div>)\n        :\n          (\n            <div style={{textAlign: \"center\", marginBottom: '40%'}}>\n              <h1 >Incorrect QR Code</h1>\n              <p>Looks like that is not a valid QR code, try sanning again...</p>\n              <button className='black-yellow' onClick={() => window.location.href='/'}>Scan QR Code</button>\n            </div>\n          )}\n      </div>\n      )\n      :\n      (\n      <div style={{textAlign: \"center\", marginBottom: '40%'}}>\n        <img alt='' className='loading-icon' src={loadingIcon} />\n      </div>)\n      }\n    </div>\n\n\n  )\n\n}\n\n\nexport default PreviewMenu","import React from 'react'\nimport yellowLogo from '../assets/images/grub.live-logo-yellow.svg'\nconst Footer = () => {\n\n\n  return (\n    <footer>\n        <div>\n          <img src={yellowLogo} alt='Grub.live logo' className='logo'></img>\n          <div>Rejuvenating the dining experience.</div>\n        </div>\n        <div className='footer-links'>\n          <a href='https://grub.live/#/contact' className='hyperlink-invert'>Contact Us</a>\n          <a href='https://grub.live/#/how-it-works ' className='hyperlink-invert'>How it works</a>\n          <a href='https://grub.live/#/about' className='hyperlink-invert'>About Us</a>\n        </div>\n        <br></br>\n        <br></br>\n      <span>Made with ❤ in India</span><br></br>\n      <span>© 2020 Grub.live</span>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nimport './assets/scss/index.scss'\nimport '../node_modules/eos-icons/dist/css/eos-icons.css'\n\nimport Home from './components/Home'\nimport Navigation from './components/Navigation'\nimport PreviewMenu from './components/PreviewMenu'\nimport Footer from './components/Footer'\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\"\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n\n      <HashRouter>\n        <Switch>\n        <Route exact path='/' children={ <Home /> }/>\n\n          <Route exact path='/:menuId'>\n            <PreviewMenu />\n          </Route>\n        </Switch>\n      </HashRouter>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}